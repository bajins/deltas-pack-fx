<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- The name of the artifact group,usually a company domain -->
    <groupId>com.bajins</groupId>
    <!-- The name of the artifact within the group,usually a project name -->
    <artifactId>deltas-pack-fx</artifactId>
    <version>0.0.3</version>
    <name>deltas-pack-fx</name>
    <packaging>jar</packaging>

    <properties>
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <java.version>1.8</java.version>
    </properties>
    <dependencies>
        <!-- https://mvnrepository.com/artifact/org.openjfx -->
        <!--<dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>11.0.2</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>11.0.2</version>
        </dependency>-->
        <!--<dependency>
            <groupId>com.jfoenix</groupId>
            <artifactId>jfoenix</artifactId>
            <version>8.0.4</version>
        </dependency>
        <dependency>
            <groupId>io.datafx</groupId>
            <artifactId>datafx</artifactId>
            <version>8.0.1</version>
        </dependency>
        <dependency>
            <groupId>io.datafx</groupId>
            <artifactId>flow</artifactId>
            <version>8.0.1</version>
        </dependency>
        <dependency>
            <groupId>de.jensd</groupId>
            <artifactId>fontawesomefx-commons</artifactId>
            <version>11.0</version>
            <type>pom</type>
        </dependency>-->

        <!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
        <!--<dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.4</version>
            &lt;!&ndash;<scope>runtime</scope>&ndash;&gt;
        </dependency>-->
        <!-- https://mvnrepository.com/artifact/org.assertj/assertj-core -->
        <!--<dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.20.2</version>
            <scope>compile</scope>
        </dependency>-->

        <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.12.0</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.controlsfx/controlsfx -->
        <dependency>
            <groupId>org.controlsfx</groupId>
            <artifactId>controlsfx</artifactId>
            <version>8.40.18</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/io.github.bajins/datetime-picker-javafx -->
        <!--<dependency>
            <groupId>io.github.bajins</groupId>
            <artifactId>datetime-picker-javafx</artifactId>
            <version>1.0.0</version>
        </dependency>-->

        <!-- https://mvnrepository.com/artifact/org.tmatesoft.svnkit/svnkit -->
        <dependency>
            <groupId>org.tmatesoft.svnkit</groupId>
            <artifactId>svnkit</artifactId>
            <version>1.10.3</version>
            <!--<version>1.9.3</version>-->
            <!--<version>1.8.14</version>-->
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.eclipse.jgit/org.eclipse.jgit -->
        <!--<dependency>
            <groupId>org.eclipse.jgit</groupId>
            <artifactId>org.eclipse.jgit</artifactId>
            <version>5.10.0.202012080955-r</version>
        </dependency>-->
    </dependencies>

    <build>
        <!-- https://maven.apache.org/plugins/index.html -->
        <plugins>
            <!-- 指定项目java编译版本 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <!-- =============== 自定义的结构打包：依赖资源打包到一个jar包中 =============== -->
            <!-- https://maven.apache.org/plugins/maven-assembly-plugin -->
            <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-assembly-plugin -->
            <!--<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        &lt;!&ndash; 绑定到package生命周期 &ndash;&gt;
                        <phase>package</phase>
                        <goals>
                            &lt;!&ndash; 只运行一次 &ndash;&gt;
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    &lt;!&ndash; 生成可运行jar包 &ndash;&gt;
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>com.bajins.deltaspackfx.Main</mainClass>
                        </manifest>
                    </archive>
                    &lt;!&ndash; 配置描述符文件 &ndash;&gt;
                    &lt;!&ndash;<descriptor>src/main/assembly/assembly.xml</descriptor>&ndash;&gt;
                    &lt;!&ndash; 也可以使用Maven预配置的描述符 &ndash;&gt;
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
            </plugin>-->

            <!-- =============== 打fat-jar(uber-jar)包：依赖资源打包到一个jar包中 =============== -->
            <!-- https://maven.apache.org/plugins/maven-shade-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <shadedArtifactAttached>false</shadedArtifactAttached>
                            <createDependencyReducedPom>true</createDependencyReducedPom>
                            <createSourcesJar>false</createSourcesJar>
                            <shadeSourcesContent>true</shadeSourcesContent>
                            <!-- 自动将所有不使用的类排除 -->
                            <minimizeJar>true</minimizeJar>
                            <!-- http://maven.apache.org/plugins/maven-shade-plugin/examples/resource-transformers.html -->
                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>com.bajins.deltaspackfx.Main</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- =============== 打普通的project JAR包：依赖jar包复制到文件夹中，资源打包到jar包中 =============== -->
            <!-- https://maven.apache.org/plugins/maven-jar-plugin -->
            <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-jar-plugin -->
            <!--<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                            &lt;!&ndash; Main class main方法 &ndash;&gt;
                            <mainClass>com.bajins.deltaspackfx.Main</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>-->
            <!-- https://maven.apache.org/plugins/maven-dependency-plugin -->
            <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-dependency-plugin -->
            <!--<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <type>jar</type>
                            <includeTypes>jar</includeTypes>
                            &lt;!&ndash; 依赖拷贝到 lib 中 &ndash;&gt;
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>-->
            <!-- https://maven.apache.org/plugins/maven-resources-plugin/plugin-info.html -->
            <!--<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/extra</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>-->

            <!-- https://openjfx.io/openjfx-docs/#maven -->
            <!--<plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.4</version>
                <configuration>
                    <stripDebug>true</stripDebug>
                    <compress>2</compress>
                    <noHeaderFiles>true</noHeaderFiles>
                    <noManPages>true</noManPages>
                    <launcher>launcher</launcher>
                    <jlinkImageName>output</jlinkImageName>
                    <jlinkZipName>deltasPackFx</jlinkZipName>
                    <mainClass>Main</mainClass>
                </configuration>
            </plugin>-->

            <!-- https://github.com/javafx-maven-plugin/javafx-maven-plugin -->
            <!--<plugin>
                <groupId>com.zenjava</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>8.8.3</version>
                <configuration>
                    <vendor>bajins</vendor>
                    <mainClass>com.bajins.deltaspackfx.Main</mainClass>
                </configuration>
            </plugin>-->

        </plugins>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.*</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>
</project>